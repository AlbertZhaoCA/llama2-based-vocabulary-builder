{"ast":null,"code":"var _jsxFileName = \"/Users/albert/Desktop/web/my-app/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../App.css';\nimport { InputWithButton } from './Input';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [vocabList, setVocabList] = useState(initial);\n  const [inputid, setinputId] = useState(0);\n  function handler() {\n    console.log('Button clicked');\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InputWithButton, {\n      id: inputid,\n      type: \"text\",\n      onChange: e => console.log(e.target.value),\n      onClick: handler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", vocabList.values().map(key => key), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"7nRSLNPGx3z9u4Ow/lxXHyBko08=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","InputWithButton","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","vocabList","setVocabList","initial","inputid","setinputId","handler","console","log","children","id","type","onChange","e","target","value","onClick","fileName","_jsxFileName","lineNumber","columnNumber","values","map","key","_c","$RefreshReg$"],"sources":["/Users/albert/Desktop/web/my-app/src/components/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../App.css';\nimport { InputWithButton } from './Input';\n\n\n  function App() {\n  const [vocabList,setVocabList] = useState(initial);\n  const [inputid,setinputId] = useState(0);\n\n  \n    function handler(){\n      console.log('Button clicked');\n  }\n  return (\n    <>\n    <InputWithButton id={inputid}  type=\"text\"  onChange={(e) => console.log(e.target.value)} onClick={handler} />\n    <p> {vocabList.values().map(key=>key)} </p>\n    </>\n    \n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AACnB,SAASC,eAAe,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGxC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,SAAS,EAACC,YAAY,CAAC,GAAGT,QAAQ,CAACU,OAAO,CAAC;EAClD,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAGtC,SAASa,OAAOA,CAAA,EAAE;IAChBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EACjC;EACA,oBACEZ,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACAb,OAAA,CAACF,eAAe;MAACgB,EAAE,EAAEN,OAAQ;MAAEO,IAAI,EAAC,MAAM;MAAEC,QAAQ,EAAGC,CAAC,IAAKN,OAAO,CAACC,GAAG,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAACC,OAAO,EAAEV;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9GxB,OAAA;MAAAa,QAAA,GAAG,GAAC,EAACR,SAAS,CAACoB,MAAM,CAAC,CAAC,CAACC,GAAG,CAACC,GAAG,IAAEA,GAAG,CAAC,EAAC,GAAC;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA,eACzC,CAAC;AAGP;AAACpB,EAAA,CAfUD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAiBd,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}