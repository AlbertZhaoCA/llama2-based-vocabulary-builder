{"ast":null,"code":"var _jsxFileName = \"/Users/albert/Desktop/web/web/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../App.css';\nimport { InputWithButton } from './Input';\nimport { Context } from './context';\nimport ollama from 'ollama/browser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function searchVocab(word) {\n  try {\n    let resp = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`);\n    if (!resp.ok) {\n      if (resp.status === 404) {\n        throw new Error('Word not found in the dictionary');\n      }\n      let error = await resp.text();\n      throw new Error(error);\n    }\n    let data = await resp.json();\n    return data;\n  } catch (error) {\n    console.error('Error:', error);\n    return null;\n  }\n}\nfunction App() {\n  _s();\n  let initial = {\n    '单词': 'Hello /həˈloʊ/',\n    '意思': 'greeting or salutation',\n    '词族': ['greeting', 'salutation']\n  };\n  const [vocabList, setVocabList] = useState([initial]);\n  const [inputid, setinputId] = useState(0);\n  const [inputValue, setInputValue] = useState('');\n  const [filled, setFilled] = useState(true);\n  function handler0() {\n    searchVocab(inputValue).then(async data => {\n      var _data$0$word, _data$, _data$0$meanings$0$de, _data$2, _data$2$meanings, _data$2$meanings$, _data$2$meanings$$def, _data$2$meanings$$def2, _data$0$meanings$0$de2, _data$3, _data$3$meanings, _data$3$meanings$, _data$3$meanings$$def, _data$3$meanings$$def2, _data$0$phonetics$0$t, _data$4, _data$4$phonetics, _data$4$phonetics$;\n      console.log(data);\n      let word = (_data$0$word = data === null || data === void 0 ? void 0 : (_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.word) !== null && _data$0$word !== void 0 ? _data$0$word : '没找到这个词✌️';\n      let meaning = (_data$0$meanings$0$de = data === null || data === void 0 ? void 0 : (_data$2 = data[0]) === null || _data$2 === void 0 ? void 0 : (_data$2$meanings = _data$2.meanings) === null || _data$2$meanings === void 0 ? void 0 : (_data$2$meanings$ = _data$2$meanings[0]) === null || _data$2$meanings$ === void 0 ? void 0 : (_data$2$meanings$$def = _data$2$meanings$.definitions) === null || _data$2$meanings$$def === void 0 ? void 0 : (_data$2$meanings$$def2 = _data$2$meanings$$def[0]) === null || _data$2$meanings$$def2 === void 0 ? void 0 : _data$2$meanings$$def2.definition) !== null && _data$0$meanings$0$de !== void 0 ? _data$0$meanings$0$de : '没找到这个词✌️';\n      let synonyms = (_data$0$meanings$0$de2 = data === null || data === void 0 ? void 0 : (_data$3 = data[0]) === null || _data$3 === void 0 ? void 0 : (_data$3$meanings = _data$3.meanings) === null || _data$3$meanings === void 0 ? void 0 : (_data$3$meanings$ = _data$3$meanings[0]) === null || _data$3$meanings$ === void 0 ? void 0 : (_data$3$meanings$$def = _data$3$meanings$.definitions) === null || _data$3$meanings$$def === void 0 ? void 0 : (_data$3$meanings$$def2 = _data$3$meanings$$def[0]) === null || _data$3$meanings$$def2 === void 0 ? void 0 : _data$3$meanings$$def2.synonyms) !== null && _data$0$meanings$0$de2 !== void 0 ? _data$0$meanings$0$de2 : '没找到这个词✌️';\n      const response = await ollama.chat({\n        model: 'llama2',\n        messages: [{\n          role: 'user',\n          content: `meaning of ${inputValue}`\n        }]\n      });\n      let newVocab = {\n        '单词': `${inputValue}  ${(_data$0$phonetics$0$t = data === null || data === void 0 ? void 0 : (_data$4 = data[0]) === null || _data$4 === void 0 ? void 0 : (_data$4$phonetics = _data$4.phonetics) === null || _data$4$phonetics === void 0 ? void 0 : (_data$4$phonetics$ = _data$4$phonetics[0]) === null || _data$4$phonetics$ === void 0 ? void 0 : _data$4$phonetics$.text) !== null && _data$0$phonetics$0$t !== void 0 ? _data$0$phonetics$0$t : '/no phonetics was found/'}`,\n        '解释': response.message.content,\n        '词族': synonyms\n      };\n      setVocabList([...vocabList, newVocab]);\n    });\n    setInputValue('');\n  }\n  function handler1() {\n    if (inputValue) {\n      console.log(inputValue);\n      setVocabList(vocabList.filter(word => word['单词'] !== inputValue));\n    } else {\n      setVocabList(vocabList.slice(0, -1));\n    }\n    setInputValue('');\n  }\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      handler0,\n      handler1,\n      filled\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word-list\",\n        children: [\" \", vocabList.map((key, index) => {\n          return /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Object.entries(key).map(([key, value], index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: `${key}: ${value}`\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 61\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 16\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", inputValue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(InputWithButton, {\n        id: inputid,\n        value: inputValue,\n        type: \"text\",\n        onChange: e => {\n          setInputValue(e.target.value);\n          setFilled(e.target.value.length == 0);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: \"\\xA9 2024 Albert. All rights reserved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"t/dh1iosSOWSdCFod4oco3/Ht5o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","InputWithButton","Context","ollama","jsxDEV","_jsxDEV","searchVocab","word","resp","fetch","ok","status","Error","error","text","data","json","console","App","_s","initial","vocabList","setVocabList","inputid","setinputId","inputValue","setInputValue","filled","setFilled","handler0","then","_data$0$word","_data$","_data$0$meanings$0$de","_data$2","_data$2$meanings","_data$2$meanings$","_data$2$meanings$$def","_data$2$meanings$$def2","_data$0$meanings$0$de2","_data$3","_data$3$meanings","_data$3$meanings$","_data$3$meanings$$def","_data$3$meanings$$def2","_data$0$phonetics$0$t","_data$4","_data$4$phonetics","_data$4$phonetics$","log","meaning","meanings","definitions","definition","synonyms","response","chat","model","messages","role","content","newVocab","phonetics","message","handler1","filter","slice","Provider","value","children","className","map","key","index","Object","entries","fileName","_jsxFileName","lineNumber","columnNumber","id","type","onChange","e","target","length","_c","$RefreshReg$"],"sources":["/Users/albert/Desktop/web/web/src/components/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../App.css';\nimport { InputWithButton } from './Input';\nimport { Context } from './context';\nimport ollama from 'ollama/browser'\n\n\nasync function searchVocab(word) {\n  try {\n   \n    let resp = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`);\n    if (!resp.ok) {\n      if (resp.status === 404) {\n        throw new Error('Word not found in the dictionary');\n      }\n      let error = await resp.text();\n      throw new Error(error);\n    }\n    let data = await resp.json();\n\n    return data;\n  } catch (error) {\n    console.error('Error:', error);\n    return null;\n  }\n}\n\n  function App() {\n\n    let initial ={\n      '单词': 'Hello /həˈloʊ/',\n      '意思': 'greeting or salutation',\n      '词族': ['greeting','salutation']\n      }\n\n  const [vocabList,setVocabList] = useState([initial]);\n  const [inputid,setinputId] = useState(0);\n  const [inputValue,setInputValue] = useState('');\n  const [filled,setFilled] = useState(true);\n\n\n   function handler0(){\n\n    searchVocab(inputValue).then(async(data) => {\n      console.log(data)\n      let word = data?.[0]?.word ?? '没找到这个词✌️';\n      let meaning = data?.[0]?.meanings?.[0]?.definitions?.[0]?.definition ?? '没找到这个词✌️';\n      let synonyms = data?.[0]?.meanings?.[0]?.definitions?.[0]?.synonyms ?? '没找到这个词✌️';\n      const response = await ollama.chat({\n        model: 'llama2',\n        messages: [{ role: 'user', content: `meaning of ${inputValue}`}],\n      })\n      \n      let newVocab = {\n        '单词': `${inputValue}  ${data?.[0]?.phonetics?.[0]?.text ?? '/no phonetics was found/'}`, \n        '解释': response.message.content,\n        '词族': synonyms\n      }\n      setVocabList([...vocabList,newVocab])\n     \n    })\n    setInputValue('');\n  }\n\n  function handler1(){\n    if (inputValue) {\n      console.log(inputValue)\n      setVocabList(vocabList.filter(word => word['单词'] !== inputValue));\n    } else {\n      setVocabList(vocabList.slice(0, -1));\n    }\n    setInputValue('');\n  }\n\n  \n\n  return (\n  <Context.Provider value={{handler0, handler1,filled}}>\n    <div className='container'>\n    <div className='word-list'> {\n      vocabList.map((key, index) => {\n        return <ul key={index}>\n          {Object.entries(key).map(([key, value], index) => <li key={index}>{`${key}: ${value}`}</li>)}\n        </ul>\n      })\n    } \n    </div>\n\n    <div>\n      <p> {inputValue}</p>\n    </div>\n    <InputWithButton id={inputid} value={inputValue}  type=\"text\"  onChange={\n      (e) =>{\n       setInputValue(e.target.value);\n       setFilled(e.target.value.length == 0);\n    }\n    }  />\n    <div className='footer'>© 2024 Albert. All rights reserved.</div>\n    </div>\n  \n  </Context.Provider>\n    \n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}