{"ast":null,"code":"var _jsxFileName = \"/Users/albert/Desktop/web/my-app/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../App.css';\nimport { InputWithButton } from './Input';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction handler0() {\n  setVocabList([...vocabList, {\n    '单词': inputValue\n  }]);\n}\nfunction handler1() {\n  console.log('Button clicked');\n}\nfunction App() {\n  _s();\n  let initial = {\n    '单词': 'Hello',\n    '解释': '你好',\n    '词族': ['greeting', 'salutation']\n  };\n  const [vocabList, setVocabList] = useState([initial]);\n  const [inputid, setinputId] = useState(0);\n  const [submit, setSubmit] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", vocabList.map((key, index) => {\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.entries(key).map(([key, value], index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: `${key}: ${value}`\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 61\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 16\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(InputWithButton, {\n      id: inputid,\n      type: \"text\",\n      onChange: e => {\n        setInputValue(e.target.value);\n      },\n      onClick: handler0,\n      onClick1: handler1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", inputValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"0bpw5CwNGpe0L3/MsCBI1X8OvqA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","InputWithButton","jsxDEV","_jsxDEV","Fragment","_Fragment","handler0","setVocabList","vocabList","inputValue","handler1","console","log","App","_s","initial","inputid","setinputId","submit","setSubmit","setInputValue","children","map","key","index","Object","entries","value","fileName","_jsxFileName","lineNumber","columnNumber","id","type","onChange","e","target","onClick","onClick1","_c","$RefreshReg$"],"sources":["/Users/albert/Desktop/web/my-app/src/components/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../App.css';\nimport { InputWithButton } from './Input';\n\n\n  function handler0(){\n    setVocabList([...vocabList,{'单词':inputValue}]);\n  }\n  function handler1(){\n    console.log('Button clicked');\n  }\n\n  function App() {\n\n    let initial ={\n      '单词': 'Hello',\n      '解释': '你好',\n      '词族': ['greeting','salutation']\n      }\n\n  const [vocabList,setVocabList] = useState([initial]);\n  const [inputid,setinputId] = useState(0);\n  const [submit,setSubmit] = useState(false);\n  const [inputValue,setInputValue] = useState('');\n\n\n\n\n  return (\n    <> \n    <div> {\n      vocabList.map((key, index) => {\n        return <ul key={index}>\n          {Object.entries(key).map(([key, value], index) => <li key={index}>{`${key}: ${value}`}</li>)}\n        </ul>\n      })\n    } \n    </div>\n    <InputWithButton id={inputid}  type=\"text\"  onChange={\n      (e) =>{\n       setInputValue(e.target.value);\n    }\n    } onClick={handler0} onClick1={handler1} />\n\n    <div>\n      <p> {inputValue}</p>\n    </div>\n  \n  \n  </>\n    \n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AACnB,SAASC,eAAe,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGxC,SAASC,QAAQA,CAAA,EAAE;EACjBC,YAAY,CAAC,CAAC,GAAGC,SAAS,EAAC;IAAC,IAAI,EAACC;EAAU,CAAC,CAAC,CAAC;AAChD;AACA,SAASC,QAAQA,CAAA,EAAE;EACjBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;AAC/B;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,IAAIC,OAAO,GAAE;IACX,IAAI,EAAE,OAAO;IACb,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,CAAC,UAAU,EAAC,YAAY;EAC9B,CAAC;EAEL,MAAM,CAACP,SAAS,EAACD,YAAY,CAAC,GAAGP,QAAQ,CAAC,CAACe,OAAO,CAAC,CAAC;EACpD,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EACxC,MAAM,CAACkB,MAAM,EAACC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC1C,MAAM,CAACS,UAAU,EAACW,aAAa,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAK/C,oBACEG,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACAlB,OAAA;MAAAkB,QAAA,GAAK,GAAC,EACJb,SAAS,CAACc,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;QAC5B,oBAAOrB,OAAA;UAAAkB,QAAA,EACJI,MAAM,CAACC,OAAO,CAACH,GAAG,CAAC,CAACD,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEI,KAAK,CAAC,EAAEH,KAAK,kBAAKrB,OAAA;YAAAkB,QAAA,EAAkB,GAAEE,GAAI,KAAII,KAAM;UAAC,GAA1BH,KAAK;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA0B,CAAC;QAAC,GAD9EP,KAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEjB,CAAC;MACP,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEC,CAAC,eACN5B,OAAA,CAACF,eAAe;MAAC+B,EAAE,EAAEhB,OAAQ;MAAEiB,IAAI,EAAC,MAAM;MAAEC,QAAQ,EACjDC,CAAC,IAAI;QACLf,aAAa,CAACe,CAAC,CAACC,MAAM,CAACT,KAAK,CAAC;MAChC,CACC;MAACU,OAAO,EAAE/B,QAAS;MAACgC,QAAQ,EAAE5B;IAAS;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE3C5B,OAAA;MAAAkB,QAAA,eACElB,OAAA;QAAAkB,QAAA,GAAG,GAAC,EAACZ,UAAU;MAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAAA,eAGN,CAAC;AAGL;AAACjB,EAAA,CAxCUD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AA0Cd,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}