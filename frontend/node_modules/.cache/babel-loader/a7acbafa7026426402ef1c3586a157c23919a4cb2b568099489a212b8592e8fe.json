{"ast":null,"code":"var _jsxFileName = \"/Users/albert/Desktop/web/web/frontend/src/components/divideWords.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useRef, useMemo } from \"react\";\nimport { Context } from './context';\nimport React from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { Draggable } from 'react-draggable';\nimport { Resizable } from 'react-resizable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dived({\n  str,\n  onWordClick\n}) {\n  _s();\n  const {\n    setSubmited\n  } = useContext(Context);\n  const list = useMemo(() => str.split(' ').map(word => ({\n    id: uuidv4(),\n    word\n  })), [str]);\n  const wordRefs = useRef([]);\n  useEffect(() => {\n    wordRefs.current = list.map(() => /*#__PURE__*/React.createRef());\n    if (list.length === 1) {\n      setSubmited({\n        word: str,\n        sentence: null\n      });\n    } else {\n      setSubmited({\n        word: null,\n        sentence: str\n      });\n    }\n  }, [str, setSubmited, list]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: list.filter(item => item.word.length > 0).map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n      ref: el => wordRefs.current[index] = el,\n      onClick: () => onWordClick(item.word, wordRefs.current[index]),\n      children: `   ${item.word}  `\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(Dived, \"Ke1374TBaiye3a+ONgcDa8O8cvg=\");\n_c = Dived;\nvar _c;\n$RefreshReg$(_c, \"Dived\");","map":{"version":3,"names":["useContext","useEffect","useRef","useMemo","Context","React","v4","uuidv4","Draggable","Resizable","jsxDEV","_jsxDEV","Dived","str","onWordClick","_s","setSubmited","list","split","map","word","id","wordRefs","current","createRef","length","sentence","children","filter","item","index","ref","el","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/albert/Desktop/web/web/frontend/src/components/divideWords.js"],"sourcesContent":["import { useContext, useEffect, useRef, useMemo } from \"react\";\nimport { Context } from './context';\nimport React from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { Draggable } from 'react-draggable';\nimport { Resizable } from 'react-resizable';\n\nexport default function Dived({str,onWordClick}){\n    const {setSubmited} = useContext(Context);\n    const list = useMemo(() => str.split(' ').map(word => ({ id: uuidv4(), word })), [str]);\n    const wordRefs = useRef([]);\n\n    useEffect(() => {\n        wordRefs.current = list.map(() => React.createRef());\n        if (list.length === 1){\n            setSubmited({ word: str, sentence: null });\n        }\n        else{\n            setSubmited({ word: null, sentence: str });\n        }\n    }, [str, setSubmited, list]);\n\n    return (\n        <div>\n            {list.filter(item => item.word.length > 0).map((item, index) => (\n                <span \n                    ref={el => wordRefs.current[index] = el} \n                    onClick={() => onWordClick(item.word, wordRefs.current[index])} \n                    key={item.id}\n                >\n                    {`   ${item.word}  `}\n                </span>\n            ))}\n        </div>\n    );\n}"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,SAAS,EAAEC,MAAM,EAAEC,OAAO,QAAQ,OAAO;AAC9D,SAASC,OAAO,QAAQ,WAAW;AACnC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AACnC,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,SAAS,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,KAAKA,CAAC;EAACC,GAAG;EAACC;AAAW,CAAC,EAAC;EAAAC,EAAA;EAC5C,MAAM;IAACC;EAAW,CAAC,GAAGhB,UAAU,CAACI,OAAO,CAAC;EACzC,MAAMa,IAAI,GAAGd,OAAO,CAAC,MAAMU,GAAG,CAACK,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,IAAI,KAAK;IAAEC,EAAE,EAAEd,MAAM,CAAC,CAAC;IAAEa;EAAK,CAAC,CAAC,CAAC,EAAE,CAACP,GAAG,CAAC,CAAC;EACvF,MAAMS,QAAQ,GAAGpB,MAAM,CAAC,EAAE,CAAC;EAE3BD,SAAS,CAAC,MAAM;IACZqB,QAAQ,CAACC,OAAO,GAAGN,IAAI,CAACE,GAAG,CAAC,mBAAMd,KAAK,CAACmB,SAAS,CAAC,CAAC,CAAC;IACpD,IAAIP,IAAI,CAACQ,MAAM,KAAK,CAAC,EAAC;MAClBT,WAAW,CAAC;QAAEI,IAAI,EAAEP,GAAG;QAAEa,QAAQ,EAAE;MAAK,CAAC,CAAC;IAC9C,CAAC,MACG;MACAV,WAAW,CAAC;QAAEI,IAAI,EAAE,IAAI;QAAEM,QAAQ,EAAEb;MAAI,CAAC,CAAC;IAC9C;EACJ,CAAC,EAAE,CAACA,GAAG,EAAEG,WAAW,EAAEC,IAAI,CAAC,CAAC;EAE5B,oBACIN,OAAA;IAAAgB,QAAA,EACKV,IAAI,CAACW,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACT,IAAI,CAACK,MAAM,GAAG,CAAC,CAAC,CAACN,GAAG,CAAC,CAACU,IAAI,EAAEC,KAAK,kBACvDnB,OAAA;MACIoB,GAAG,EAAEC,EAAE,IAAIV,QAAQ,CAACC,OAAO,CAACO,KAAK,CAAC,GAAGE,EAAG;MACxCC,OAAO,EAAEA,CAAA,KAAMnB,WAAW,CAACe,IAAI,CAACT,IAAI,EAAEE,QAAQ,CAACC,OAAO,CAACO,KAAK,CAAC,CAAE;MAAAH,QAAA,EAG7D,MAAKE,IAAI,CAACT,IAAK;IAAG,GAFfS,IAAI,CAACR,EAAE;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGV,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACtB,EAAA,CA5BuBH,KAAK;AAAA0B,EAAA,GAAL1B,KAAK;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}