{"ast":null,"code":"var _jsxFileName = \"/Users/albert/Desktop/web/web/frontend/src/components/divideWords.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useRef } from \"react\";\nimport { Context } from './context';\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dived({\n  str,\n  onWordClick\n}) {\n  _s();\n  const {\n    setSubmited\n  } = useContext(Context);\n  let list = str.split(' ');\n  const wordRefs = useRef([]);\n  useEffect(() => {\n    if (list.length === 1) {\n      setSubmited({\n        word: str,\n        sentence: null\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: list.filter(item => item.length > 0).map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            ref: el => wordRefs.current[index] = el,\n            onClick: () => onWordClick(item, wordRefs.current[index]),\n            children: `   ${item}  `\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this);\n    } else {\n      setSubmited({\n        word: null,\n        sentence: str\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: list.filter(item => item.length > 0).map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            ref: el => wordRefs.current[index] = el,\n            onClick: () => onWordClick(item, wordRefs.current[index]),\n            children: `   ${item}  `\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 16\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this);\n    }\n  }, [str, setSubmited]);\n}\n_s(Dived, \"oFeCNJJ5CUJRJFlkAAtVu5yRiIw=\");\n_c = Dived;\nvar _c;\n$RefreshReg$(_c, \"Dived\");","map":{"version":3,"names":["useContext","useEffect","useRef","Context","React","jsxDEV","_jsxDEV","Dived","str","onWordClick","_s","setSubmited","list","split","wordRefs","length","word","sentence","children","filter","item","map","index","ref","el","current","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/albert/Desktop/web/web/frontend/src/components/divideWords.js"],"sourcesContent":["import { useContext,useEffect,useRef } from \"react\";\nimport { Context } from './context';\nimport React from \"react\";\n\n\nexport default function Dived({str,onWordClick}){\n    const {setSubmited} = useContext(Context);\n    let list = str.split(' ');\n    const wordRefs = useRef([]);\n\n    useEffect(() => {\n        if (list.length === 1){\n            setSubmited({ word: str, sentence: null });\n            return (\n                <div>\n                    {list.filter(item => item.length > 0).map((item, index) => {\n            return <span ref={(el) =>wordRefs.current[index] = el} onClick={()=> onWordClick(item,wordRefs.current[index])} key={index}>{ `   ${item}  ` }</span>})}\n                </div>\n            )\n        }\n            \n        else{\n            setSubmited({ word: null, sentence: str });\n            return (\n                <div>\n                    {list.filter(item => item.length > 0).map((item, index) => {\n        return <span ref={(el) =>wordRefs.current[index] = el} onClick={()=> onWordClick(item,wordRefs.current[index])} key={index}>{ `   ${item}  ` }</span>})}\n                </div>\n            )\n        }\n    }, [str, setSubmited]);\n\n    \n}\n"],"mappings":";;AAAA,SAASA,UAAU,EAACC,SAAS,EAACC,MAAM,QAAQ,OAAO;AACnD,SAASC,OAAO,QAAQ,WAAW;AACnC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,eAAe,SAASC,KAAKA,CAAC;EAACC,GAAG;EAACC;AAAW,CAAC,EAAC;EAAAC,EAAA;EAC5C,MAAM;IAACC;EAAW,CAAC,GAAGX,UAAU,CAACG,OAAO,CAAC;EACzC,IAAIS,IAAI,GAAGJ,GAAG,CAACK,KAAK,CAAC,GAAG,CAAC;EACzB,MAAMC,QAAQ,GAAGZ,MAAM,CAAC,EAAE,CAAC;EAE3BD,SAAS,CAAC,MAAM;IACZ,IAAIW,IAAI,CAACG,MAAM,KAAK,CAAC,EAAC;MAClBJ,WAAW,CAAC;QAAEK,IAAI,EAAER,GAAG;QAAES,QAAQ,EAAE;MAAK,CAAC,CAAC;MAC1C,oBACIX,OAAA;QAAAY,QAAA,EACKN,IAAI,CAACO,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACL,MAAM,GAAG,CAAC,CAAC,CAACM,GAAG,CAAC,CAACD,IAAI,EAAEE,KAAK,KAAK;UACnE,oBAAOhB,OAAA;YAAMiB,GAAG,EAAGC,EAAE,IAAIV,QAAQ,CAACW,OAAO,CAACH,KAAK,CAAC,GAAGE,EAAG;YAACE,OAAO,EAAEA,CAAA,KAAKjB,WAAW,CAACW,IAAI,EAACN,QAAQ,CAACW,OAAO,CAACH,KAAK,CAAC,CAAE;YAAAJ,QAAA,EAAgB,MAAKE,IAAK;UAAG,GAAvBE,KAAK;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA0B,CAAC;QAAA,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9I,CAAC;IAEd,CAAC,MAEG;MACAnB,WAAW,CAAC;QAAEK,IAAI,EAAE,IAAI;QAAEC,QAAQ,EAAET;MAAI,CAAC,CAAC;MAC1C,oBACIF,OAAA;QAAAY,QAAA,EACKN,IAAI,CAACO,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACL,MAAM,GAAG,CAAC,CAAC,CAACM,GAAG,CAAC,CAACD,IAAI,EAAEE,KAAK,KAAK;UACvE,oBAAOhB,OAAA;YAAMiB,GAAG,EAAGC,EAAE,IAAIV,QAAQ,CAACW,OAAO,CAACH,KAAK,CAAC,GAAGE,EAAG;YAACE,OAAO,EAAEA,CAAA,KAAKjB,WAAW,CAACW,IAAI,EAACN,QAAQ,CAACW,OAAO,CAACH,KAAK,CAAC,CAAE;YAAAJ,QAAA,EAAgB,MAAKE,IAAK;UAAG,GAAvBE,KAAK;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA0B,CAAC;QAAA,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1I,CAAC;IAEd;EACJ,CAAC,EAAE,CAACtB,GAAG,EAAEG,WAAW,CAAC,CAAC;AAG1B;AAACD,EAAA,CA5BuBH,KAAK;AAAAwB,EAAA,GAALxB,KAAK;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}