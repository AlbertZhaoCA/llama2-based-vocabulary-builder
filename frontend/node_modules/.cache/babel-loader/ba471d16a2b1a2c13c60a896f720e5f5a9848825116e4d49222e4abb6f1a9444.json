{"ast":null,"code":"var _jsxFileName = \"/Users/albert/Desktop/web/my-app/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../App.css';\nimport { InputWithButton } from './Input';\nimport { Context } from './context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function searchVocab(word) {\n  try {\n    console.log(response.message.content);\n    let resp = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`);\n    if (!resp.ok) {\n      if (resp.status === 404) {\n        throw new Error('Word not found in the dictionary');\n      }\n      let error = await resp.text();\n      throw new Error(error);\n    }\n    let data = await resp.json();\n    return data;\n  } catch (error) {\n    console.error('Error:', error);\n    return null;\n  }\n}\nfunction App() {\n  _s();\n  let initial = {\n    '单词': 'Hello',\n    '解释': '你好',\n    '词族': ['greeting', 'salutation']\n  };\n  const [vocabList, setVocabList] = useState([initial]);\n  const [inputid, setinputId] = useState(0);\n  const [inputValue, setInputValue] = useState('');\n  const [filled, setFilled] = useState(true);\n  function handler0() {\n    searchVocab(inputValue).then(data => {\n      var _data$0$word, _data$, _data$0$meanings$0$de, _data$2, _data$2$meanings, _data$2$meanings$, _data$2$meanings$$def, _data$2$meanings$$def2, _data$0$meanings$0$de2, _data$3, _data$3$meanings, _data$3$meanings$, _data$3$meanings$$def, _data$3$meanings$$def2;\n      console.log(data);\n      let word = (_data$0$word = data === null || data === void 0 ? void 0 : (_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.word) !== null && _data$0$word !== void 0 ? _data$0$word : '没找到这个词✌️';\n      let meaning = (_data$0$meanings$0$de = data === null || data === void 0 ? void 0 : (_data$2 = data[0]) === null || _data$2 === void 0 ? void 0 : (_data$2$meanings = _data$2.meanings) === null || _data$2$meanings === void 0 ? void 0 : (_data$2$meanings$ = _data$2$meanings[0]) === null || _data$2$meanings$ === void 0 ? void 0 : (_data$2$meanings$$def = _data$2$meanings$.definitions) === null || _data$2$meanings$$def === void 0 ? void 0 : (_data$2$meanings$$def2 = _data$2$meanings$$def[0]) === null || _data$2$meanings$$def2 === void 0 ? void 0 : _data$2$meanings$$def2.definition) !== null && _data$0$meanings$0$de !== void 0 ? _data$0$meanings$0$de : '没找到这个词✌️';\n      let synonyms = (_data$0$meanings$0$de2 = data === null || data === void 0 ? void 0 : (_data$3 = data[0]) === null || _data$3 === void 0 ? void 0 : (_data$3$meanings = _data$3.meanings) === null || _data$3$meanings === void 0 ? void 0 : (_data$3$meanings$ = _data$3$meanings[0]) === null || _data$3$meanings$ === void 0 ? void 0 : (_data$3$meanings$$def = _data$3$meanings$.definitions) === null || _data$3$meanings$$def === void 0 ? void 0 : (_data$3$meanings$$def2 = _data$3$meanings$$def[0]) === null || _data$3$meanings$$def2 === void 0 ? void 0 : _data$3$meanings$$def2.synonyms) !== null && _data$0$meanings$0$de2 !== void 0 ? _data$0$meanings$0$de2 : '没找到这个词✌️';\n      let newVocab = {\n        '单词': word,\n        '解释': meaning,\n        '词族': synonyms\n      };\n      setVocabList([...vocabList, newVocab]);\n    });\n    setVocabList([...vocabList, {\n      '单词': inputValue\n    }]);\n    setInputValue('');\n  }\n  function handler1() {\n    console.log('Button clicked');\n  }\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      handler0,\n      handler1,\n      filled\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", vocabList.map((key, index) => {\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.entries(key).map(([key, value], index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: `${key}: ${value}`\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 61\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 16\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", inputValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(InputWithButton, {\n      id: inputid,\n      value: inputValue,\n      type: \"text\",\n      onChange: e => {\n        setInputValue(e.target.value);\n        setFilled(e.target.value.length == 0);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"t/dh1iosSOWSdCFod4oco3/Ht5o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","InputWithButton","Context","jsxDEV","_jsxDEV","searchVocab","word","console","log","response","message","content","resp","fetch","ok","status","Error","error","text","data","json","App","_s","initial","vocabList","setVocabList","inputid","setinputId","inputValue","setInputValue","filled","setFilled","handler0","then","_data$0$word","_data$","_data$0$meanings$0$de","_data$2","_data$2$meanings","_data$2$meanings$","_data$2$meanings$$def","_data$2$meanings$$def2","_data$0$meanings$0$de2","_data$3","_data$3$meanings","_data$3$meanings$","_data$3$meanings$$def","_data$3$meanings$$def2","meaning","meanings","definitions","definition","synonyms","newVocab","handler1","Provider","value","children","map","key","index","Object","entries","fileName","_jsxFileName","lineNumber","columnNumber","id","type","onChange","e","target","length","_c","$RefreshReg$"],"sources":["/Users/albert/Desktop/web/my-app/src/components/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../App.css';\nimport { InputWithButton } from './Input';\nimport { Context } from './context';\n\n\nasync function searchVocab(word) {\n  try {\n   \n    console.log(response.message.content)\n    let resp = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`);\n    if (!resp.ok) {\n      if (resp.status === 404) {\n        throw new Error('Word not found in the dictionary');\n      }\n      let error = await resp.text();\n      throw new Error(error);\n    }\n    let data = await resp.json();\n\n    return data;\n  } catch (error) {\n    console.error('Error:', error);\n    return null;\n  }\n}\n\n  function App() {\n\n    let initial ={\n      '单词': 'Hello',\n      '解释': '你好',\n      '词族': ['greeting','salutation']\n      }\n\n  const [vocabList,setVocabList] = useState([initial]);\n  const [inputid,setinputId] = useState(0);\n  const [inputValue,setInputValue] = useState('');\n  const [filled,setFilled] = useState(true);\n\n\n  function handler0(){\n\n    searchVocab(inputValue).then(data => {\n      console.log(data)\n      let word = data?.[0]?.word ?? '没找到这个词✌️';\n      let meaning = data?.[0]?.meanings?.[0]?.definitions?.[0]?.definition ?? '没找到这个词✌️';\n      let synonyms = data?.[0]?.meanings?.[0]?.definitions?.[0]?.synonyms ?? '没找到这个词✌️';\n      let newVocab = {\n        '单词': word,\n        '解释': meaning,\n        '词族': synonyms\n      }\n      setVocabList([...vocabList,newVocab])\n    })\n    setVocabList([...vocabList,{'单词':inputValue}]);\n    setInputValue('');\n  }\n\n  function handler1(){\n    console.log('Button clicked');\n  }\n\n  return (\n  <Context.Provider value={{handler0, handler1,filled}}>\n    <div> {\n      vocabList.map((key, index) => {\n        return <ul key={index}>\n          {Object.entries(key).map(([key, value], index) => <li key={index}>{`${key}: ${value}`}</li>)}\n        </ul>\n      })\n    } \n    </div>\n\n    <div>\n      <p> {inputValue}</p>\n    </div>\n    <InputWithButton id={inputid} value={inputValue}  type=\"text\"  onChange={\n      (e) =>{\n       setInputValue(e.target.value);\n       setFilled(e.target.value.length == 0);\n    }\n    }  />\n  \n  </Context.Provider>\n    \n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}