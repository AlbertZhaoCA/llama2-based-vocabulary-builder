{"ast":null,"code":"var _jsxFileName = \"/Users/albert/Desktop/web/web/frontend/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../App.css';\nimport { InputWithButton, Input } from './Input';\nimport { Context } from './context';\nimport { Button } from './Button';\nimport Dived from './divideWords';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  useEffect(() => {\n    localStorage.setItem('searchValue', searchValue);\n    localStorage.setItem('isCollapsed', JSON.stringify(isCollapsed));\n    localStorage.setItem('isClicked', JSON.stringify(isClicked));\n    localStorage.setItem('searchMeaning', searchMeaning);\n  }, [searchValue, isCollapsed, isClicked, searchMeaning]);\n  useEffect(() => {\n    const savedSearchValue = localStorage.getItem('searchValue');\n    if (savedSearchValue) {\n      setSearchValue(savedSearchValue);\n    }\n    const savedIsCollapsed = localStorage.getItem('isCollapsed');\n    if (savedIsCollapsed) {\n      setIsCollapsed(JSON.parse(savedIsCollapsed));\n    }\n    const savedIsClicked = localStorage.getItem('isClicked');\n    if (savedIsClicked) {\n      setIsClicked(JSON.parse(savedIsClicked));\n    }\n    const savedSearchMeaning = localStorage.getItem('searchMeaning');\n    if (savedSearchMeaning) {\n      setSearchMeaning(savedSearchMeaning);\n    }\n  }, []);\n  async function searchVocab(word) {\n    try {\n      console.log(word);\n      let resp = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`);\n      if (!resp.ok) {\n        if (resp.status === 404) {\n          throw new Error('Word not found in the dictionary');\n        }\n        let error = await resp.text();\n        throw new Error(error);\n      }\n      let data = await resp.json();\n      return data;\n    } catch (error) {\n      console.error('Error:', error);\n      return null;\n    }\n  }\n  let initial = {\n    'word': 'example',\n    '单词': ' example /ɪg\\'zæmpl/',\n    '解释': '这是一个小小的🌰,希望你查到最合适的解释',\n    '背景': 'For example, if you give us the context, we will show you here'\n  };\n  const [vocabList, setVocabList] = useState([initial]);\n  const [inputValue, setInputValue] = useState('');\n  const [filled, setFilled] = useState(true);\n  const [searchValue, setSearchValue] = useState('');\n  const [searchMeaning, setSearchMeaning] = useState('');\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const [isClicked, setIsClicked] = useState(false);\n  const [submited, setSubmited] = useState({});\n  async function addHandler(e, {\n    word,\n    sentence = inputValue\n  }) {\n    try {\n      e.preventDefault();\n      let newVocab = {\n        'word': word,\n        '单词': '',\n        '解释': '',\n        '背景': sentence ? sentence : ''\n      };\n      if (word) {\n        newVocab['单词'] = word;\n      } else {\n        newVocab['单词'] = sentence.slice(4);\n      }\n      const data = {\n        word: word,\n        sentence: sentence\n      };\n      const response = await fetch('http://localhost:10001/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(response => {\n        const reader = response.body.getReader();\n        return new ReadableStream({\n          start(controller) {\n            function push() {\n              reader.read().then(({\n                done,\n                value\n              }) => {\n                if (done) {\n                  setInputValue('');\n                  controller.close();\n                  return;\n                }\n                const text = new TextDecoder(\"utf-8\").decode(value);\n                const cleanedText = text.replace(/(data: .*?)\\s*(?=data:|$)/g, '$1').replace(/data: /g, '');\n                newVocab['解释'] += cleanedText;\n                setVocabList([...vocabList, newVocab]);\n                push();\n              });\n            }\n            push();\n          }\n        });\n      }).then(stream => {\n        return new Response(stream, {\n          headers: {\n            \"Content-Type\": \"text/html\"\n          }\n        }).text();\n      }).then(result => {\n        console.log(result);\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n  function deleteHandler(e) {\n    try {\n      e.preventDefault();\n      if (inputValue) {\n        console.log(vocabList.filter(para => para.word !== inputValue));\n        setVocabList(vocabList.filter(para => para.word !== inputValue));\n      } else {\n        setVocabList(vocabList.slice(0, -1));\n      }\n      setInputValue('');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n  function searchHandler(e) {\n    try {\n      e.preventDefault();\n      vocabList.map(key => {\n        if (key.word === searchValue) {\n          console.log(key['解释']);\n          setSearchMeaning(key['解释']);\n        }\n        setSearchValue('');\n      });\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n  function handleWordClick(word) {\n    setSubmited({\n      word: word,\n      sentence: inputValue\n    });\n    console.log('clicked');\n  }\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      addHandler,\n      deleteHandler,\n      searchHandler,\n      filled,\n      inputValue,\n      submited,\n      setSubmited\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [!isCollapsed && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word-list\",\n        children: [\" \", vocabList.map((key, index) => {\n          return /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Object.entries(key).map(([key, value], index) => {\n              if (key !== 'word') {\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: `${key}: ${value}`\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 28\n                }, this);\n              }\n            })\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputing\",\n          children: /*#__PURE__*/_jsxDEV(Dived, {\n            str: inputValue,\n            onWordClick: handleWordClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 22\n      }, this), isCollapsed && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word-list no-column-flex\",\n        children: [\" \", vocabList.map((key, index) => {\n          return /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"collapsed\",\n            style: {},\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: key['单词']\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputing\",\n          children: /*#__PURE__*/_jsxDEV(Dived, {\n            str: inputValue,\n            onWordClick: handleWordClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"wordAndSentence\",\n          onSubmit: e => {\n            addHandler(e, submited);\n          },\n          children: /*#__PURE__*/_jsxDEV(InputWithButton, {\n            handler: deleteHandler,\n            value: inputValue,\n            type: \"text\",\n            onChange: e => {\n              setInputValue(e.target.value);\n              setFilled(e.target.value.length == 0);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"searchWord\",\n          onSubmit: e => searchHandler(e),\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"\\u67E5\\u627E\\u751F\\u8BCD\\u672C\\u7684\\u5355\\u8BCD\",\n            value: searchValue,\n            type: \"text\",\n            onChange: e => {\n              setSearchValue(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            event: \"\\u67E5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            event: \"\\u6E05\\u67E5\\u627E\",\n            handler: () => {\n              setSearchMeaning('');\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        event: isClicked ? '展' : '收',\n        handler: () => {\n          setIsCollapsed(!isCollapsed);\n          setIsClicked(!isClicked);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: searchMeaning\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: \"\\xA9 2024 Kitty Bob. All rights reserved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"rIS845P+PjsHpzePLvVSxUcGc+A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","InputWithButton","Input","Context","Button","Dived","useEffect","jsxDEV","_jsxDEV","App","_s","localStorage","setItem","searchValue","JSON","stringify","isCollapsed","isClicked","searchMeaning","savedSearchValue","getItem","setSearchValue","savedIsCollapsed","setIsCollapsed","parse","savedIsClicked","setIsClicked","savedSearchMeaning","setSearchMeaning","searchVocab","word","console","log","resp","fetch","ok","status","Error","error","text","data","json","initial","vocabList","setVocabList","inputValue","setInputValue","filled","setFilled","submited","setSubmited","addHandler","e","sentence","preventDefault","newVocab","slice","response","method","headers","body","then","reader","getReader","ReadableStream","start","controller","push","read","done","value","close","TextDecoder","decode","cleanedText","replace","stream","Response","result","catch","deleteHandler","filter","para","searchHandler","map","key","handleWordClick","Provider","children","className","index","Object","entries","fileName","_jsxFileName","lineNumber","columnNumber","str","onWordClick","style","onSubmit","handler","type","onChange","target","length","placeholder","event","_c","$RefreshReg$"],"sources":["/Users/albert/Desktop/web/web/frontend/src/components/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../App.css';\nimport { InputWithButton,Input } from './Input';\nimport { Context } from './context';\nimport { Button } from './Button';\nimport  Dived  from './divideWords';\nimport { useEffect } from 'react';\n\n\n  function App() {\n\n\n    useEffect(() => {\n      localStorage.setItem('searchValue', searchValue);\n      localStorage.setItem('isCollapsed', JSON.stringify(isCollapsed));\n      localStorage.setItem('isClicked', JSON.stringify(isClicked));\n      localStorage.setItem('searchMeaning', searchMeaning);\n    }, [searchValue, isCollapsed, isClicked, searchMeaning]);\n\n    useEffect(() => {\n      const savedSearchValue = localStorage.getItem('searchValue');\n      if (savedSearchValue) {\n        setSearchValue(savedSearchValue);\n      }\n\n      const savedIsCollapsed = localStorage.getItem('isCollapsed');\n      if (savedIsCollapsed) {\n        setIsCollapsed(JSON.parse(savedIsCollapsed));\n      }\n\n      const savedIsClicked = localStorage.getItem('isClicked');\n      if (savedIsClicked) {\n        setIsClicked(JSON.parse(savedIsClicked));\n      }\n\n      const savedSearchMeaning = localStorage.getItem('searchMeaning');\n      if (savedSearchMeaning) {\n        setSearchMeaning(savedSearchMeaning);\n      }\n    }, []);\n\n    async function searchVocab(word) {\n      try {\n        console.log(word);\n        let resp = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`);\n        if (!resp.ok) {\n          if (resp.status === 404) {\n            throw new Error('Word not found in the dictionary');\n          }\n          let error = await resp.text();\n          throw new Error(error);\n        }\n        let data = await resp.json();\n\n        return data;\n      } catch (error) {\n        console.error('Error:', error);\n        return null;\n      }\n    }\n\n\n    let initial ={\n      'word': 'example',\n      '单词': ' example /ɪg\\'zæmpl/',\n      '解释': '这是一个小小的🌰,希望你查到最合适的解释',\n      '背景': 'For example, if you give us the context, we will show you here',\n      }\n\n  const [vocabList,setVocabList] = useState([initial]);\n  const [inputValue,setInputValue] = useState('');\n  const [filled,setFilled] = useState(true);\n  const [searchValue,setSearchValue] = useState('');\n  const [searchMeaning,setSearchMeaning] = useState('');\n  const [isCollapsed,setIsCollapsed] = useState(false);\n  const [isClicked,setIsClicked] = useState(false);\n  const [submited,setSubmited] = useState({});\n\n\n\n  async function addHandler(e,{word,sentence=inputValue}) {\n    try {\n      e.preventDefault();\n  \n      let newVocab = {\n        'word':word,\n        '单词': '', \n        '解释': '',\n        '背景': sentence ? sentence : '',\n      };\n  \n      if (word) {\n        newVocab['单词'] = word;\n      } else {\n        newVocab['单词'] = sentence.slice(4);\n      }\n\n      const data = { word: word, sentence: sentence };\n      const response = await fetch('http://localhost:10001/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      }).then(response => {\n        const reader = response.body.getReader();\n        return new ReadableStream({\n          start(controller) {\n            function push() {\n              reader.read().then(({ done, value }) => {\n                if (done) {\n                  setInputValue('');\n                  controller.close();\n                  return;\n                }    \n                \n                const text = new TextDecoder(\"utf-8\").decode(value);\n                const cleanedText = text.replace(/(data: .*?)\\s*(?=data:|$)/g, '$1').replace(/data: /g, '');    \n\n                newVocab['解释'] += cleanedText;\n                setVocabList([...vocabList,newVocab])\n                \n                push();\n              });\n            }\n            push();\n          }\n        });\n      })\n      .then(stream => {\n        return new Response(stream, { headers: { \"Content-Type\": \"text/html\" } }).text();\n      })\n      .then(result => {\n        console.log(result);\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n   \n    }catch(error){\n      console.error('Error:', error);\n    }\n  }\n  \n  function deleteHandler(e){\n    try {\n      e.preventDefault();\n\n    if (inputValue) {\n      console.log(vocabList.filter(para => para.word !== inputValue))\n      setVocabList(vocabList.filter(para => para.word !== inputValue));\n    } else {\n      setVocabList(vocabList.slice(0, -1));\n    }\n    setInputValue('');\n  }\n    catch (error) {\n      console.error('Error:', error);\n    }\n  }\n\n  function searchHandler(e){\n    try{\n      e.preventDefault();\n\n    vocabList.map((key) => {\n      if (key.word === searchValue) {\n        console.log(key['解释']);\n        setSearchMeaning(key['解释'])    \n        }\n        setSearchValue('');\n    })\n  }\n  catch (error) {\n    console.error('Error:', error);\n  }\n  }\n\n  function handleWordClick(word) {\n    setSubmited({word: word,sentence: inputValue});\n    console.log('clicked');\n}\n\n\n  return (\n  <Context.Provider value={{addHandler, deleteHandler,searchHandler,\n  filled,inputValue,submited,setSubmited}}>\n    <div className='container'>\n   \n    {!isCollapsed && <div className='word-list'> {\n      \n      vocabList.map((key, index) => {\n            return (\n              <ul key={index}>\n                {Object.entries(key).map(([key, value], index) => {\n                  if (key !== 'word') {\n                    return <li key={index}>{`${key}: ${value}`}</li>;\n                  }\n                })}\n              </ul>\n            );\n          })\n          }  \n\n        <div className='inputing'>\n          <Dived str={inputValue} onWordClick={handleWordClick} />\n        </div>\n    </div>\n    }\n     {isCollapsed && <div className='word-list no-column-flex'> {\n      \n      vocabList.map((key, index) => {\n        \n            return (\n            <ul className='collapsed' style={{\n         \n        }}>\n              <li key={index}>{key['单词']}</li>\n              </ul>  );\n          \n          })\n          }\n          \n        <div className='inputing'>\n        <Dived str={inputValue} onWordClick={handleWordClick} />\n        </div>\n    </div>\n    }\n   \n    <div className='searchBar'>\n    <form className=\"wordAndSentence\"onSubmit={e=>{addHandler(e,submited)}}>\n    <InputWithButton handler={deleteHandler} value={inputValue}  type=\"text\"  onChange={\n      (e) =>{\n       setInputValue(e.target.value);\n       setFilled(e.target.value.length == 0);\n    }\n    } />\n    </form>\n    <form className=\"searchWord\"onSubmit={(e)=>searchHandler(e)}>\n      <Input placeholder='查找生词本的单词' value={searchValue}  type=\"text\" onChange={\n      (e) =>{\n       setSearchValue(e.target.value);\n    }\n    }  \n    />\n        <Button  event='查'  />\n        <Button  event='清查找' handler={()=>{setSearchMeaning('')}} />\n\n    </form>\n\n    </div>\n   \n  <Button \n  event={isClicked ? '展' : '收'} \n  handler={() => {\n    setIsCollapsed(!isCollapsed);\n    setIsClicked(!isClicked);\n  }} \n/> \n<p>{searchMeaning}</p>\n <div className='footer'>© 2024 Kitty Bob. All rights reserved.</div>\n    \n   </div> \n  </Context.Provider>\n  );\n}\n\nexport default App;\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}