{"ast":null,"code":"var _jsxFileName = \"/Users/albert/Desktop/web/web/frontend/src/components/divideWords.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useRef } from \"react\";\nimport { Context } from './context';\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dived({\n  str,\n  onWordClick\n}) {\n  _s();\n  const {\n    setSubmited\n  } = useContext(Context);\n  let list = str.split(' ');\n  const wordRefs = useRef([]);\n  useEffect(() => {\n    wordRefs.current = list.map(() => /*#__PURE__*/React.createRef());\n    if (list.length === 1) {\n      setSubmited({\n        word: str,\n        sentence: null\n      });\n    } else {\n      setSubmited({\n        word: null,\n        sentence: str\n      });\n    }\n  }, [str, setSubmited]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: list.filter(item => item.length > 0).map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n      ref: el => wordRefs.current[index] = el,\n      onClick: () => onWordClick(item, wordRefs.current[index]),\n      children: `   ${item}  `\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(Dived, \"oFeCNJJ5CUJRJFlkAAtVu5yRiIw=\");\n_c = Dived;\nvar _c;\n$RefreshReg$(_c, \"Dived\");","map":{"version":3,"names":["useContext","useEffect","useRef","Context","React","jsxDEV","_jsxDEV","Dived","str","onWordClick","_s","setSubmited","list","split","wordRefs","current","map","createRef","length","word","sentence","children","filter","item","index","ref","el","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/albert/Desktop/web/web/frontend/src/components/divideWords.js"],"sourcesContent":["import { useContext, useEffect, useRef } from \"react\";\nimport { Context } from './context';\nimport React from \"react\";\n\nexport default function Dived({str,onWordClick}){\n    const {setSubmited} = useContext(Context);\n    let list = str.split(' ');\n    const wordRefs = useRef([]);\n\n    useEffect(() => {\n        wordRefs.current = list.map(() => React.createRef());\n        if (list.length === 1){\n            setSubmited({ word: str, sentence: null });\n        }\n        else{\n            setSubmited({ word: null, sentence: str });\n        }\n    }, [str, setSubmited]);\n\n    return (\n        <div>\n            {list.filter(item => item.length > 0).map((item, index) => (\n                <span \n                    ref={el => wordRefs.current[index] = el} \n                    onClick={() => onWordClick(item, wordRefs.current[index])} \n                    key={index}\n                >\n                    {`   ${item}  `}\n                </span>\n            ))}\n        </div>\n    );\n}"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACrD,SAASC,OAAO,QAAQ,WAAW;AACnC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,KAAKA,CAAC;EAACC,GAAG;EAACC;AAAW,CAAC,EAAC;EAAAC,EAAA;EAC5C,MAAM;IAACC;EAAW,CAAC,GAAGX,UAAU,CAACG,OAAO,CAAC;EACzC,IAAIS,IAAI,GAAGJ,GAAG,CAACK,KAAK,CAAC,GAAG,CAAC;EACzB,MAAMC,QAAQ,GAAGZ,MAAM,CAAC,EAAE,CAAC;EAE3BD,SAAS,CAAC,MAAM;IACZa,QAAQ,CAACC,OAAO,GAAGH,IAAI,CAACI,GAAG,CAAC,mBAAMZ,KAAK,CAACa,SAAS,CAAC,CAAC,CAAC;IACpD,IAAIL,IAAI,CAACM,MAAM,KAAK,CAAC,EAAC;MAClBP,WAAW,CAAC;QAAEQ,IAAI,EAAEX,GAAG;QAAEY,QAAQ,EAAE;MAAK,CAAC,CAAC;IAC9C,CAAC,MACG;MACAT,WAAW,CAAC;QAAEQ,IAAI,EAAE,IAAI;QAAEC,QAAQ,EAAEZ;MAAI,CAAC,CAAC;IAC9C;EACJ,CAAC,EAAE,CAACA,GAAG,EAAEG,WAAW,CAAC,CAAC;EAEtB,oBACIL,OAAA;IAAAe,QAAA,EACKT,IAAI,CAACU,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACL,MAAM,GAAG,CAAC,CAAC,CAACF,GAAG,CAAC,CAACO,IAAI,EAAEC,KAAK,kBAClDlB,OAAA;MACImB,GAAG,EAAEC,EAAE,IAAIZ,QAAQ,CAACC,OAAO,CAACS,KAAK,CAAC,GAAGE,EAAG;MACxCC,OAAO,EAAEA,CAAA,KAAMlB,WAAW,CAACc,IAAI,EAAET,QAAQ,CAACC,OAAO,CAACS,KAAK,CAAC,CAAE;MAAAH,QAAA,EAGxD,MAAKE,IAAK;IAAG,GAFVC,KAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGR,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACrB,EAAA,CA5BuBH,KAAK;AAAAyB,EAAA,GAALzB,KAAK;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}