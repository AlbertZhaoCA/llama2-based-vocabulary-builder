{"ast":null,"code":"var _jsxFileName = \"/Users/albert/Desktop/web/web/frontend/src/components/divideWords.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useRef } from \"react\";\nimport { Context } from './context';\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dived({\n  str,\n  onWordClick\n}) {\n  _s();\n  const {\n    setSubmited\n  } = useContext(Context);\n  let list = str.split(' ');\n  const wordRefs = useRef([]);\n  useEffect(() => {\n    if (list.length === 1) {\n      wordRefs.current = list.map((item, index) => /*#__PURE__*/React.createRef());\n      setSubmited({\n        word: str,\n        sentence: null\n      });\n    } else {\n      wordRefs.current = list.map((item, index) => /*#__PURE__*/React.createRef());\n      setSubmited({\n        word: null,\n        sentence: str\n      });\n    }\n  }, [str, setSubmited]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: list.filter(item => item.length > 0).map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        ref: wordRefs.current[index],\n        onClick: () => onWordClick(item, wordRefs.current[index]),\n        children: `   ${item}  `\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 8\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(Dived, \"oFeCNJJ5CUJRJFlkAAtVu5yRiIw=\");\n_c = Dived;\nvar _c;\n$RefreshReg$(_c, \"Dived\");","map":{"version":3,"names":["useContext","useEffect","useRef","Context","React","jsxDEV","_jsxDEV","Dived","str","onWordClick","_s","setSubmited","list","split","wordRefs","length","current","map","item","index","createRef","word","sentence","children","filter","ref","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/albert/Desktop/web/web/frontend/src/components/divideWords.js"],"sourcesContent":["import { useContext,useEffect,useRef } from \"react\";\nimport { Context } from './context';\nimport React from \"react\";\n\n\nexport default function Dived({str,onWordClick}){\n    const {setSubmited} = useContext(Context);\n    let list = str.split(' ');\n    const wordRefs = useRef([]);\n\n    useEffect(() => {\n        if (list.length === 1){\n            wordRefs.current = list.map((item,index) => React.createRef());\n            setSubmited({ word: str, sentence: null });}\n        else{\n            wordRefs.current = list.map((item,index) => React.createRef());\n            setSubmited({ word: null, sentence: str });\n        }\n    }, [str, setSubmited]);\n\n    return (\n        <div>\n            {list.filter(item => item.length > 0).map((item, index) => {\nreturn <span ref={wordRefs.current[index]} onClick={()=> onWordClick(item,wordRefs.current[index])} key={index}>{ `   ${item}  ` }</span>})}\n        </div>\n    )\n}\n"],"mappings":";;AAAA,SAASA,UAAU,EAACC,SAAS,EAACC,MAAM,QAAQ,OAAO;AACnD,SAASC,OAAO,QAAQ,WAAW;AACnC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,eAAe,SAASC,KAAKA,CAAC;EAACC,GAAG;EAACC;AAAW,CAAC,EAAC;EAAAC,EAAA;EAC5C,MAAM;IAACC;EAAW,CAAC,GAAGX,UAAU,CAACG,OAAO,CAAC;EACzC,IAAIS,IAAI,GAAGJ,GAAG,CAACK,KAAK,CAAC,GAAG,CAAC;EACzB,MAAMC,QAAQ,GAAGZ,MAAM,CAAC,EAAE,CAAC;EAE3BD,SAAS,CAAC,MAAM;IACZ,IAAIW,IAAI,CAACG,MAAM,KAAK,CAAC,EAAC;MAClBD,QAAQ,CAACE,OAAO,GAAGJ,IAAI,CAACK,GAAG,CAAC,CAACC,IAAI,EAACC,KAAK,kBAAKf,KAAK,CAACgB,SAAS,CAAC,CAAC,CAAC;MAC9DT,WAAW,CAAC;QAAEU,IAAI,EAAEb,GAAG;QAAEc,QAAQ,EAAE;MAAK,CAAC,CAAC;IAAC,CAAC,MAC5C;MACAR,QAAQ,CAACE,OAAO,GAAGJ,IAAI,CAACK,GAAG,CAAC,CAACC,IAAI,EAACC,KAAK,kBAAKf,KAAK,CAACgB,SAAS,CAAC,CAAC,CAAC;MAC9DT,WAAW,CAAC;QAAEU,IAAI,EAAE,IAAI;QAAEC,QAAQ,EAAEd;MAAI,CAAC,CAAC;IAC9C;EACJ,CAAC,EAAE,CAACA,GAAG,EAAEG,WAAW,CAAC,CAAC;EAEtB,oBACIL,OAAA;IAAAiB,QAAA,EACKX,IAAI,CAACY,MAAM,CAACN,IAAI,IAAIA,IAAI,CAACH,MAAM,GAAG,CAAC,CAAC,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MACvE,oBAAOb,OAAA;QAAMmB,GAAG,EAAEX,QAAQ,CAACE,OAAO,CAACG,KAAK,CAAE;QAACO,OAAO,EAAEA,CAAA,KAAKjB,WAAW,CAACS,IAAI,EAACJ,QAAQ,CAACE,OAAO,CAACG,KAAK,CAAC,CAAE;QAAAI,QAAA,EAAgB,MAAKL,IAAK;MAAG,GAAvBC,KAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA0B,CAAC;IAAA,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9H,CAAC;AAEd;AAACpB,EAAA,CArBuBH,KAAK;AAAAwB,EAAA,GAALxB,KAAK;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}